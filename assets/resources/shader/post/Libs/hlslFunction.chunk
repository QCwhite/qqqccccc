#ifndef HLSL_FUNCTIONS_GLSL
#define HLSL_FUNCTIONS_GLSL
#include <builtin/uniforms/cc-global>

#define lerp mix
#define frac fract
#define fmod mod

#define float2 vec2
#define float3 vec3
#define float4 vec4
#define float2x2 mat2
#define float3x3 mat3
#define float4x4 mat4

#define _ScreenParams cc_screenSize;

float rcp(float x) {
  return 1.0 / x;
}
vec2 rcp(vec2 x) {
  return vec2(vec2(1.0) / x);
}
vec3 rcp(vec3 x) {
  return vec3(vec3(1.0) / x);
}
vec4 rcp(vec4 x) {
  return vec4(vec4(1.0) / x);
}
float saturate(float x) {
  return clamp(x, 0.0, 1.0);
}
vec2 saturate(vec2 x) {
  return clamp(x, 0.0, 1.0);
}
vec3 saturate(vec3 x) {
  return clamp(x, 0.0, 1.0);
}
vec4 saturate(vec4 x) {
  return clamp(x, vec4(0.0), vec4(1.0));
}

#endif // HLSL_FUNCTIONS_GLSL